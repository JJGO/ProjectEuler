#!/usr/bin/env python

# Project Euler Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# Reasoning
# By construnction the Fibonacci numbers are [even, odd, odd]+

# Answer: 4613732

import numpy as np
import time

def sum_even_fibs(threshold):
    sum_evens = 0
    odd1 = 1
    odd2 = 1
    even = 2
    while(even < threshold):
        sum_evens+=even
        odd1 = odd2+even # 3 = 1 + 2
        odd2 = even+odd1 # 5 = 2 + 3
        even = odd1+odd2 # 8 = 3 + 5
    return sum_evens

if __name__ == '__main__':
    start = time.time()
    print(sum_even_fibs(4e6))
    print("Done! Took %.6fs" % (time.time()-start))